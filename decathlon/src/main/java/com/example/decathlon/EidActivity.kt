package com.example.decathlon

import android.os.Bundle
import android.widget.ImageButton
import androidx.appcompat.app.AlertDialog
import androidx.appcompat.app.AppCompatActivity
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView

class EidActivity : AppCompatActivity() {

    private lateinit var recyclerView: RecyclerView
    private lateinit var adapter: UkolAdapter
    private val taskList = mutableListOf<Ukol>() // Dynamick√Ω seznam √∫kol≈Ø

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_eid)

        recyclerView = findViewById(R.id.recyclerUkoly)
        recyclerView.layoutManager = LinearLayoutManager(this)

        val btnPridatUkol = findViewById<ImageButton>(R.id.btnPridatUkol)

        // üìå Inicializace seznamu √∫kol≈Ø
        taskList.addAll(
            mutableListOf(
                Ukol(1, "Dokonƒçit report", false),
                Ukol(2, "Uklidit sklad", false),
                Ukol(3, "Inventura", true),
                Ukol(4, "P≈ôipravit podklady", false),
                Ukol(5, "Zavolat dodavateli", true)
            )
        )

        // ‚úÖ Adapter bude pou≈æ√≠vat `taskList`, aby se seznam dynamicky mƒõnil
        adapter = UkolAdapter(taskList,
            onChecked = { position -> saveTaskStatus(position) },
            onTaskClick = { position -> showDeleteDialog(position) }
        )

        recyclerView.adapter = adapter

        // üîô Tlaƒç√≠tko zpƒõt
        findViewById<ImageButton>(R.id.btnZpet5).setOnClickListener {
            finish()
        }

        // ‚ûï P≈ôid√°n√≠ nov√©ho √∫kolu
        btnPridatUkol.setOnClickListener {
            addNewTask()
        }
    }

    // ‚úÖ P≈ôid√° nov√Ω √∫kol a obnov√≠ RecyclerView
    private fun addNewTask() {
        val newTask = Ukol(taskList.size + 1, "Nov√Ω √∫kol", false)
        taskList.add(newTask)
        adapter.notifyItemInserted(taskList.lastIndex) // Posledn√≠ index je v≈ædy spr√°vn√Ω
        recyclerView.scrollToPosition(taskList.lastIndex)
    }

    // ‚úÖ Dialog pro smaz√°n√≠ √∫kolu
    private fun showDeleteDialog(position: Int) {
        if (position < 0 || position >= taskList.size) return // Ochrana proti chyb√°m

        AlertDialog.Builder(this)
            .setTitle("Smazat √∫kol?")
            .setMessage("Opravdu chcete smazat tento √∫kol?")
            .setPositiveButton("Ano") { _, _ ->
                taskList.removeAt(position)
                adapter.notifyItemRemoved(position)
                adapter.notifyItemRangeChanged(position, taskList.size) // Oprava index≈Ø
            }
            .setNegativeButton("Ne", null)
            .show()
    }

    // ‚úÖ Ulo≈æ√≠ stav checkboxu (splnƒõno/nesplnƒõno)
    private fun saveTaskStatus(position: Int) {
        if (position < 0 || position >= taskList.size) return // Ochrana proti chyb√°m
        val ukol = taskList[position]
        println("Ukol '${ukol.nazev}' je nyn√≠: ${if (ukol.splneno) "Hotovo" else "Nehotovo"}")
    }
}
